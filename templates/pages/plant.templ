package pages

import (
    "fmt"
    "pepper-analytics-ai/templates/layout"
    "pepper-analytics-ai/internal/types"
    "time"
)

func getAgeString(plantingDate time.Time) string {
    age := time.Since(plantingDate)
    days := int(age.Hours() / 24)

    if days < 30 {
        return fmt.Sprintf("%d days", days)
    }

    months := days / 30
    if months < 12 {
        return fmt.Sprintf("%d months", months)
    }

    years := months / 12
    remainingMonths := months % 12
    if remainingMonths == 0 {
        return fmt.Sprintf("%d years", years)
    }
    return fmt.Sprintf("%dy %dm", years, remainingMonths)
}

templ Plant(plants []types.PlantWithDates) {
    @layout.Base(layout.BaseProps{Title: "My Plants"}) {
        <div class="container mt-4">
            <!-- Search/Filter Section -->
            <div class="card mb-4">
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label class="form-label">Growth Stage</label>
                            <select class="form-select"
                                    name="growth_stage_filter"
                                    hx-get="/"
                                    hx-target="#plantGrid"
                                    hx-trigger="change"
                                    hx-include="[name='species_filter'],[name='cross_filter'],[name='harvest_filter']"
                                    hx-push-url="true">
                                <option value="">All Stages</option>
                                <option value="Seedling">Seedling</option>
                                <option value="Vegetative">Vegetative</option>
                                <option value="Flowering">Flowering</option>
                                <option value="Fruiting">Fruiting</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Species</label>
                            <select class="form-select"
                                    name="species_filter"
                                    hx-get="/"
                                    hx-target="#plantGrid"
                                    hx-trigger="change"
                                    hx-include="[name='growth_stage_filter'],[name='cross_filter'],[name='harvest_filter']"
                                    hx-push-url="true">
                                <option value="">All Species</option>
                                <option value="Capsicum annuum">Capsicum annuum</option>
                                <option value="Capsicum chinense">Capsicum chinense</option>
                                <option value="Capsicum baccatum">Capsicum baccatum</option>
                                <option value="Capsicum frutescens">Capsicum frutescens</option>
                                <option value="Capsicum pubescens">Capsicum pubescens</option>
                                <option value="Capsicum rhomboideum">Capsicum rhomboideum</option>
                                <option value="Capsicum praetermissum">Capsicum praetermissum</option>
                                <option value="Capsicum cardenasii">Capsicum cardenasii</option>
                                <option value="Capsicum eximium">Capsicum eximium</option>
                                <option value="Capsicum galapagoense">Capsicum galapagoense</option>
                                <option value="Capsicum flexuosum">Capsicum flexuosum</option>
                                <option value="Capsicum exile">Capsicum exile</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Cross Status</label>
                            <select class="form-select"
                                    name="cross_filter"
                                    hx-get="/"
                                    hx-target="#plantGrid"
                                    hx-trigger="change"
                                    hx-include="[name='growth_stage_filter'],[name='species_filter'],[name='harvest_filter']"
                                    hx-push-url="true">
                                <option value="">All Plants</option>
                                <option value="true">Crosses Only</option>
                                <option value="false">Non-Crosses Only</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Harvest Status</label>
                            <select class="form-select"
                                    name="harvest_filter"
                                    hx-get="/"
                                    hx-target="#plantGrid"
                                    hx-trigger="change"
                                    hx-include="[name='growth_stage_filter'],[name='species_filter'],[name='cross_filter']"
                                    hx-push-url="true">
                                <option value="">All Plants</option>
                                <option value="false">Active Only</option>
                                <option value="true">Harvested Only</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="mb-0">My Plants</h2>
                    <small class="text-muted">
                        if len(plants) == 1 {
                            { "Showing 1 plant" }
                        } else {
                            { fmt.Sprintf("Showing %d plants", len(plants)) }
                        }
                    </small>
                </div>
                <button class="btn btn-primary"
                        hx-get="/plants/new"
                        hx-target="#modal-content"
                        data-bs-toggle="modal"
                        data-bs-target="#plantModal">
                    Add Plant
                </button>
            </div>

            @PlantsGrid(plants)

            <div class="modal fade" id="plantModal" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content" id="modal-content"></div>
                </div>
            </div>

            <script>
                // Set initial filter values from URL parameters
                document.addEventListener('DOMContentLoaded', function() {
                    const urlParams = new URLSearchParams(window.location.search);
                    const filters = [
                        'growth_stage_filter',
                        'species_filter',
                        'cross_filter',
                        'harvest_filter'
                    ];

                    filters.forEach(filter => {
                        const value = urlParams.get(filter);
                        if (value) {
                            document.querySelector(`[name="${filter}"]`).value = value;
                        }
                    });
                });
            </script>
        </div>
    }
}
templ NewPlantForm() {
   <div class="modal-header">
       <h5 class="modal-title">Add New Plant</h5>
       <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
   </div>
   <div class="modal-body">
        <form id="plantForm"
            hx-post="/plants/create"
            hx-encoding="multipart/form-data"
            hx-swap="outerHTML"
            hx-target="#plantGrid">
           <div class="mb-3">
               <label class="form-label">Name</label>
               <input type="text" class="form-control" name="name" required/>
           </div>
           <div class="mb-3">
               <label class="form-label">Species</label>
               <select class="form-select" name="species" required>
                   <option value="Capsicum annuum">Capsicum annuum</option>
                   <option value="Capsicum chinense">Capsicum chinense</option>
                   <option value="Capsicum baccatum">Capsicum baccatum</option>
                   <option value="Capsicum frutescens">Capsicum frutescens</option>
                   <option value="Capsicum pubescens">Capsicum pubescens</option>
                   <option value="Capsicum rhomboideum">Capsicum rhomboideum</option>
                   <option value="Capsicum praetermissum">Capsicum praetermissum</option>
                   <option value="Capsicum cardenasii">Capsicum cardenasii</option>
                   <option value="Capsicum eximium">Capsicum eximium</option>
                   <option value="Capsicum galapagoense">Capsicum galapagoense</option>
                   <option value="Capsicum tovarii">Capsicum tovarii</option>
                   <option value="Capsicum flexuosum">Capsicum flexuosum</option>
                   <option value="Capsicum exile">Capsicum exile</option>
               </select>
           </div>
           <div class="mb-3">
               <label class="form-label">Seeding Date</label>
               <input type="date"
                      class="form-control"
                      name="planting_date"
                      value={time.Now().Format("2006-01-02")}
                      required/>
           </div>
            <div class="mb-3">
                <label class="form-label">Cross</label>
                <select class="form-select"
                        name="cross"
                        id="crossSelect"
                        required
                        onchange="handleCrossChange(this)">
                   <option value="No">No</option>
                   <option value="Yes">Yes</option>
                </select>
            </div>

            <div id="generationContainer" class="d-none">
                <div class="mb-3">
                    <label class="form-label">Generation</label>
                    <input type="text"
                           class="form-control"
                           id="generationInput"
                           name="generation"
                           placeholder="e.g., F1, F2, etc."/>
                </div>
            </div>

           <div class="mb-3">
               <label class="form-label">Health</label>
               <select class="form-select" name="health" required>
                   <option value="Excellent">Excellent</option>
                   <option value="Good">Good</option>
                   <option value="Fair">Fair</option>
                   <option value="Poor">Poor</option>
               </select>
           </div>
           <div class="mb-3">
               <label class="form-label">Growth Stage</label>
               <select class="form-select" name="growth_stage" required>
                   <option value="Seed">Seed</option>
                   <option value="Seedling">Seedling</option>
                   <option value="Vegetative">Vegetative</option>
                   <option value="Flowering">Flowering</option>
                   <option value="Fruiting">Fruiting</option>
               </select>
           </div>
           <div class="mb-3">
               <label class="form-label">Image</label>
               <input type="file" class="form-control" name="image" accept="image/*"/>
           </div>
           <div class="mb-3">
               <label class="form-label">Notes</label>
               <textarea class="form-control" name="notes" rows="3"></textarea>
           </div>
       </form>
   </div>
   <div class="modal-footer">
       <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
       <button type="submit" class="btn btn-primary" form="plantForm">Add Plant</button>
   </div>

   <script>
    function handleCrossChange(selectElement) {
        const generationContainer = document.getElementById('generationContainer');
        const generationInput = document.getElementById('generationInput');

        if (selectElement.value === 'Yes') {
            generationContainer.classList.remove('d-none');
            generationInput.required = true;
        } else {
            generationContainer.classList.add('d-none');
            generationInput.required = false;
            generationInput.value = '';
        }
    }
   </script>
}

templ EditPlantForm(plant types.PlantWithDates) {
    <div class="modal-header">
        <h5 class="modal-title">Edit Plant</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
    </div>
    <div class="modal-body">
        <form id="plantForm"
              hx-put={fmt.Sprintf("/plants/%d", plant.ID)}
              hx-encoding="multipart/form-data"
              hx-target="#plantGrid"
              hx-swap="outerHTML">
            <div class="mb-3">
                <label class="form-label">Name</label>
                <input type="text" class="form-control" name="name" value={plant.Name} required/>
            </div>
            <div class="mb-3">
                <label class="form-label">Species</label>
                <select class="form-select" name="species" required>
                    <option value="Capsicum annuum" selected?={string(plant.Species) == "Capsicum annuum"}>Capsicum annuum</option>
                    <option value="Capsicum chinense" selected?={string(plant.Species) == "Capsicum chinense"}>Capsicum chinense</option>
                    <option value="Capsicum baccatum" selected?={string(plant.Species) == "Capsicum baccatum"}>Capsicum baccatum</option>
                    <option value="Capsicum frutescens" selected?={string(plant.Species) == "Capsicum frutescens"}>Capsicum frutescens</option>
                    <option value="Capsicum pubescens" selected?={string(plant.Species) == "Capsicum pubescens"}>Capsicum pubescens</option>
                    <option value="Capsicum rhomboideum" selected?={string(plant.Species) == "Capsicum rhomboideum"}>Capsicum rhomboideum</option>
                    <option value="Capsicum praetermissum" selected?={string(plant.Species) == "Capsicum praetermissum"}>Capsicum praetermissum</option>
                    <option value="Capsicum cardenasii" selected?={string(plant.Species) == "Capsicum cardenasii"}>Capsicum cardenasii</option>
                    <option value="Capsicum eximium" selected?={string(plant.Species) == "Capsicum eximium"}>Capsicum eximium</option>
                    <option value="Capsicum galapagoense" selected?={string(plant.Species) == "Capsicum galapagoense"}>Capsicum galapagoense</option>
                    <option value="Capsicum flexuosum" selected?={string(plant.Species) == "Capsicum flexuosum"}>Capsicum flexuosum</option>
                    <option value="Capsicum exile" selected?={string(plant.Species) == "Capsicum exile"}>Capsicum exile</option>
                </select>
            </div>
            <div class="mb-3">
               <label class="form-label">Seeding Date</label>
               <input type="date"
                      class="form-control"
                      name="planting_date"
                      value={plant.PlantingDate.Format("2006-01-02")}
                      required/>
           </div>
            <div class="mb-3">
                <label class="form-label">Cross</label>
                <select class="form-select"
                        name="cross"
                        id="crossSelect"
                        required
                        onchange="handleCrossChange(this)">
                    <option value="No" selected?={!plant.IsCross}>No</option>
                    <option value="Yes" selected?={plant.IsCross}>Yes</option>
                </select>
            </div>

            <div id="generationContainer" class={templ.KV("d-none", !plant.IsCross)}>
                <div class="mb-3">
                    <label class="form-label">Generation</label>
                    <input type="text"
                           class="form-control"
                           id="generationInput"
                           name="generation"
                           placeholder="e.g., F1, F2, etc."
                           value={plant.Generation.String}
                           required?={plant.IsCross}/>
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label">Health</label>
                <select class="form-select" name="health" required>
                    <option value="Excellent" selected?={string(plant.Health) == "Excellent"}>Excellent</option>
                    <option value="Good" selected?={string(plant.Health) == "Good"}>Good</option>
                    <option value="Fair" selected?={string(plant.Health) == "Fair"}>Fair</option>
                    <option value="Poor" selected?={string(plant.Health) == "Poor"}>Poor</option>
                </select>
            </div>
            <div class="mb-3">
                <label class="form-label">Growth Stage</label>
                <select class="form-select" name="growth_stage" required>
                    <option value="Seed" selected?={string(plant.GrowthStage) == "Seed"}>Seed</option>
                    <option value="Seedling" selected?={string(plant.GrowthStage) == "Seedling"}>Seedling</option>
                    <option value="Vegetative" selected?={string(plant.GrowthStage) == "Vegetative"}>Vegetative</option>
                    <option value="Flowering" selected?={string(plant.GrowthStage) == "Flowering"}>Flowering</option>
                    <option value="Fruiting" selected?={string(plant.GrowthStage) == "Fruiting"}>Fruiting</option>
                </select>
            </div>
            <div class="mb-3">
                <label class="form-label">Image</label>
                <input type="file" class="form-control" name="image" accept="image/*"/>
                if plant.ImagePath != "" {
                    <img src={plant.ImagePath} alt="Current plant" class="img-thumbnail mt-2" style="max-height: 200px;"/>
                }
            </div>
            <div class="mb-3">
                <label class="form-label">Notes</label>
                <textarea class="form-control" name="notes" rows="3">{plant.Notes}</textarea>
            </div>
        </form>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-primary" form="plantForm">Save Changes</button>
    </div>

    <script>
        function handleCrossChange(selectElement) {
            const generationContainer = document.getElementById('generationContainer');
            const generationInput = document.getElementById('generationInput');

            if (selectElement.value === 'Yes') {
                generationContainer.classList.remove('d-none');
                generationInput.required = true;
            } else {
                generationContainer.classList.add('d-none');
                generationInput.required = false;
                generationInput.value = '';
            }
        }

        // Initialize the generation field visibility
        document.addEventListener('DOMContentLoaded', function() {
            const crossSelect = document.getElementById('crossSelect');
            handleCrossChange(crossSelect);
        });
    </script>
}

templ PlantsGrid(plants []types.PlantWithDates) {
    <div class="row g-4" id="plantGrid">
        for _, plant := range plants {
            <div class="col-md-4" id={fmt.Sprintf("plant-%d", plant.ID)}>
                <div class={ "card h-100", templ.KV("bg-light", plant.IsHarvested) }>
                    if plant.ImagePath != "" {
                        <img src={plant.ImagePath} class="card-img-top" alt={plant.Name}/>
                    }
                    <div class="card-body">
                        <h5 class="card-title">{plant.Name}</h5>
                        <p class="card-text">
                            <small class="text-muted">{string(plant.Species)}</small>
                        </p>
                        <div class="mb-2">
                            <span class="badge bg-primary me-2">{string(plant.GrowthStage)}</span>
                            <span class="badge bg-secondary me-2">{string(plant.Health)}</span>
                            if plant.IsCross {
                                <span class="badge bg-warning me-2">
                                    Cross
                                    if plant.Generation.Valid {
                                        { " " + plant.Generation.String }
                                    }
                                </span>
                            }
                            if plant.IsHarvested {
                                <span class="badge bg-success me-2">
                                    Harvested
                                    if plant.HarvestedAt.Valid {
                                        { " on " + plant.HarvestedAt.Time.Format("Jan 02, 2006") }
                                    }
                                </span>
                            }
                        </div>
                        <div class="mb-2">
                            <span class="badge bg-info me-2">
                                <i class="bi bi-droplet me-1"></i>
                                Watering:
                                if plant.LastWatering != nil {
                                    {plant.LastWatering.Format("Jan 02")}
                                } else {
                                    {"No record"}
                                }
                            </span>
                            <span class="badge bg-success me-2">
                                <i class="bi bi-flower1 me-1"></i>
                                Fertilizing:
                                if plant.LastFertilizing != nil {
                                    {plant.LastFertilizing.Format("Jan 02")}
                                } else {
                                    {"No record"}
                                }
                            </span>
                            <span class="badge bg-secondary">
                                <i class="bi bi-calendar me-1"></i>
                                if !plant.IsHarvested {
                                    { "Age: " + getAgeString(plant.PlantingDate) }
                                } else {
                                    { "Final age: " + getAgeString(plant.PlantingDate) }
                                }
                            </span>
                        </div>
                        <div class="d-flex gap-2">
                            <button class="btn btn-sm btn-outline-primary"
                                    hx-get={fmt.Sprintf("/plants/%d/edit", plant.ID)}
                                    hx-target="#modal-content"
                                    data-bs-toggle="modal"
                                    data-bs-target="#plantModal">
                                Edit
                            </button>
                            if !plant.IsHarvested {
    <button class="btn btn-sm btn-outline-success"
            hx-put={fmt.Sprintf("/plants/%d/harvest", plant.ID)}
            hx-confirm="Mark this plant as harvested?"
            hx-target="#plantGrid"
            hx-include="[name='growth_stage_filter'],[name='species_filter'],[name='cross_filter'],[name='harvest_filter']"
            hx-swap="outerHTML">
        Mark Harvested
    </button>
}
                            <button class="btn btn-sm btn-outline-danger"
                                    hx-delete={fmt.Sprintf("/plants/%d", plant.ID)}
                                    hx-confirm="Are you sure you want to delete this plant?"
                                    hx-target={fmt.Sprintf("#plant-%d", plant.ID)}
                                    hx-swap="outerHTML">
                                Delete
                            </button>
                            <a href={ templ.SafeURL(fmt.Sprintf("/plants/%d/journal", plant.ID)) }
                               class="btn btn-sm btn-outline-secondary">
                                Journal
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
